plugins {
    id 'java'
    id 'signing'
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.16.0'
    id 'net.linguica.maven-settings' version '0.5'
}

java {
    withJavadocJar()
    withSourcesJar()
}

apply plugin: 'maven-publish'
apply plugin: 'net.linguica.maven-settings'

sourceCompatibility = 11

version = getVersionFromTag()

def getVersionFromTag() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--always', '--match', '[0-9]*'
        standardOutput = stdout
        ignoreExitValue true
    }
    return stdout.toString().trim() ?: '0.0.1'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.sahilpaudel'
            artifactId "keycloak-java-client"

            from components.java

            pom {
                name = 'keycloak-java-client'
                description = 'Keycloak Java Client with Annotations'
                url = 'https://github.com/sahilpaudel/keycloak-java-client'
                inceptionYear = '2025'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sahilpaudel'
                        name = 'Sahil Paudel'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/sahilpaudel/keycloak-java-client.git'
                    developerConnection = 'scm:git:ssh://github.com/sahilpaudel/keycloak-java-client.git'
                    url = 'https://github.com/sahilpaudel/keycloak-java-client'
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
//        maven {
//            name = 'OSSRH'
//            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
//            credentials {
//                username = project.findProperty('ossrhUsername') ?: ''
//                password = project.findProperty('ossrhPassword') ?: ''
//            }
//        }
    }
}

signing {
    //sign publishing.publications.mavenJava
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    caffeineVersion = '2.8.1'
    springVersion = '2.5.2'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springVersion}"

    implementation "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "com.fasterxml.jackson.core:jackson-core:2.10.3"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.13.4.2"

    compileOnly "org.projectlombok:lombok:1.18.12"
    annotationProcessor "org.projectlombok:lombok:1.18.12"

    testCompileOnly "org.projectlombok:lombok:1.18.12"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.12"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springVersion}"
}

test {
    useJUnitPlatform()
}